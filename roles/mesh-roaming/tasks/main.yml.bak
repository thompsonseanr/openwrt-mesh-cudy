#SPDX-License-Identifier: MIT-0
---
# tasks file for mesh-roaming
- name: Openwrt mesh-roaming configuration
  become: true
  become_user: root
  delegate_to: localhost
  block:
    - name: Configure LAN IP
      ansible.builtin.shell: |
        sshpass -p '{{ openWrtPass }}' ssh -o StrictHostKeyChecking=no '{{ openWrtUser }}@{{ inventory_hostname }}' '
        uci set network.lan.proto='\''static'\''
        uci set network.lan.ipaddr='\''{{ inventory_hostname }}'\''
        uci set network.lan.netmask='\''255.255.255.0'\''
        uci set network.lan.gateway='\''192.168.1.1'\''
        uci set network.lan.dns='\''192.168.1.1'\''
        uci commit network'

    - name: Setup batman-adv device
      ansible.builtin.shell: |
        sshpass -p '{{ openWrtPass }}' ssh -o StrictHostKeyChecking=no '{{ openWrtUser }}@{{ inventory_hostname }}' '
        uci set network.bat0='\''interface'\''
        uci set network.bat0.proto='\''batadv'\''
        uci set network.bat0.mesh='\''bat0'\''
        uci set network.bat0.auto='\''1'\''
        uci commit network'

    - name: Bridge LAN to batman-adv and Ethernet
      ansible.builtin.shell: |
        sshpass -p '{{ openWrtPass }}' ssh -o StrictHostKeyChecking=no '{{ openWrtUser }}@{{ inventory_hostname }}' '
        uci set network.lan.ifname='\''eth0 bat0'\''
        uci commit network'

    - name: Configure 5GHz radio
      ansible.builtin.shell: |
        sshpass -p '{{ openWrtPass }}' ssh -o StrictHostKeyChecking=no '{{ openWrtUser }}@{{ inventory_hostname }}' '
        uci set wireless.radio1.channel='\''36'\''
        uci set wireless.radio1.hwmode='\''11a'\''
        uci set wireless.radio1.htmode='\''VHT80'\''
        uci set wireless.radio1.disabled='\''0'\'''

    - name: Configure 2GHz radio
      ansible.builtin.shell: |
        sshpass -p '{{ openWrtPass }}' ssh -o StrictHostKeyChecking=no '{{ openWrtUser }}@{{ inventory_hostname }}' '
        uci set wireless.radio0.channel='\''1'\''
        uci set wireless.radio0.hwmode='\''11g'\''
        uci set wireless.radio0.htmode='\''HT20'\''
        uci set wireless.radio0.disabled='\''0'\'''

    - name: Create mesh interfaces with WPA3 5GHz mesh
      ansible.builtin.shell: |
        sshpass -p '{{ openWrtPass }}' ssh -o StrictHostKeyChecking=no '{{ openWrtUser }}@{{ inventory_hostname }}' '
        uci set wireless.mesh5='\''wifi-iface'\''
        uci set wireless.mesh5.device='\''radio1'\''
        uci set wireless.mesh5.mode='\''mesh'\''
        uci set wireless.mesh5.mesh_id='\''meshparty'\''
        uci set wireless.mesh5.encryption='\''sae'\''
        uci set wireless.mesh5.key='\''{{ meshApPass }}'\''
        uci set wireless.mesh5.network='\''bat0'\''
        uci set wireless.mesh5.mesh_fwding='\''1'\'''

    - name: Create mesh interfaces with WPA3 2GHz mesh
      ansible.builtin.shell: |
        sshpass -p '{{ openWrtPass }}' ssh -o StrictHostKeyChecking=no '{{ openWrtUser }}@{{ inventory_hostname }}' '
        uci set wireless.mesh2='\''wifi-iface'\''
        uci set wireless.mesh2.device='\''radio0'\''
        uci set wireless.mesh2.mode='\''mesh'\''
        uci set wireless.mesh2.mesh_id='\''meshparty'\''
        uci set wireless.mesh2.encryption='\''sae'\''
        uci set wireless.mesh2.key='\''{{ meshApPass }}'\''
        uci set wireless.mesh2.network='\''bat0'\''
        uci set wireless.mesh2.mesh_fwding='\''1'\'''

    - name: Add dual-band access points with WPA3 + roaming 5GHz mesh
      ansible.builtin.shell: |
        sshpass -p '{{ openWrtPass }}' ssh -o StrictHostKeyChecking=no '{{ openWrtUser }}@{{ inventory_hostname }}' '
        uci set wireless.ap5='\''wifi-iface'\''
        uci set wireless.ap5.device='\''radio1'\''
        uci set wireless.ap5.mode='\''ap'\''
        uci set wireless.ap5.ssid='\''stayclassy'\''
        uci set wireless.ap5.encryption='\''sae'\''
        uci set wireless.ap5.key='\''{{ meshApPass }}'\''
        uci set wireless.ap5.network='\''lan'\''
        uci set wireless.ap5.ieee80211r='\''1'\''
        uci set wireless.ap5.mobility_domain='\''4f57'\''
        uci set wireless.ap5.ft_over_ds='\''1'\''
        uci set wireless.ap5.ft_psk_generate_local='\''1'\''
        uci set wireless.ap5.ieee80211k='\''1'\''
        uci set wireless.ap5.ieee80211v='\''1'\''
        uci set wireless.ap5.bss_transition='\''1'\'''

    - name: Add dual-band access points with WPA3 + roaming 2GHz mesh
      ansible.builtin.shell: |
        sshpass -p '{{ openWrtPass }}' ssh -o StrictHostKeyChecking=no '{{ openWrtUser }}@{{ inventory_hostname }}' '
        uci set wireless.ap2='\''wifi-iface'\''
        uci set wireless.ap2.device='\''radio0'\''
        uci set wireless.ap2.mode='\''ap'\''
        uci set wireless.ap2.ssid='\''stayclassy'\''
        uci set wireless.ap2.encryption='\''sae'\''
        uci set wireless.ap2.key='\''{{ meshApPass }}'\''
        uci set wireless.ap2.network='\''lan'\''
        uci set wireless.ap2.ieee80211r='\''1'\''
        uci set wireless.ap2.mobility_domain='\''4f57'\''
        uci set wireless.ap2.ft_over_ds='\''1'\''
        uci set wireless.ap2.ft_psk_generate_local='\''1'\''
        uci set wireless.ap2.ieee80211k='\''1'\''
        uci set wireless.ap2.ieee80211v='\''1'\''
        uci set wireless.ap2.bss_transition='\''1'\''
        uci commit wireless'

    - name: Commit changes
      ansible.builtin.shell: |
        sshpass -p '{{ openWrtPass }}' ssh -o StrictHostKeyChecking=no '{{ openWrtUser }}@{{ inventory_hostname }}' '
        uci commit network
        uci commit wireless'

    - name: Restart network
      ansible.builtin.shell: >
        sshpass -p '{{ openWrtPass }}' ssh -o StrictHostKeyChecking=no '{{ openWrtUser }}@{{ inventory_hostname }}' '/etc/init.d/network restart'

    - name: Wifi reload
      ansible.builtin.shell: >
        sshpass -p '{{ openWrtPass }}' ssh -o StrictHostKeyChecking=no '{{ openWrtUser }}@{{ inventory_hostname }}' 'wifi reload'
